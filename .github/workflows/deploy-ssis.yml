name: Deploy SSIS Packages to SQL Server

on:
  workflow_dispatch:

jobs:
  deploy-ssis:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Debug workspace and user
        shell: powershell
        run: |
          Write-Output "Workspace path: $env:GITHUB_WORKSPACE"
          Write-Output "Current user: $env:USERDOMAIN\$env:USERNAME"
          Get-ChildItem -Path "$env:GITHUB_WORKSPACE" -Recurse

      - name: Verify SSIS project file exists
        shell: powershell
        run: |
          $projectPath = "$env:GITHUB_WORKSPACE\HandsOnProject\Timesheet\MigratingTimesheet"
          if (-not (Test-Path "$projectPath\MigratingTimesheet.dtproj")) {
            Write-Error "SSIS project file not found at: $projectPath"
            exit 1
          }
          Write-Output "Found SSIS project file at $projectPath"

      - name: Verify SSIS build tools exist
        shell: powershell
        run: |
          if (-not (Test-Path "C:\ssis-tools\SSISBuild.exe")) {
            Write-Error "SSISBuild.exe not found"
            exit 1
          }
          if (-not (Test-Path "C:\Program Files\Microsoft SQL Server\160\DTS\Binn\ISDeploymentWizard.exe")) {
            Write-Error "ISDeploymentWizard.exe not found"
            exit 1
          }
          if (-not (Get-Command sqlcmd.exe -ErrorAction SilentlyContinue)) {
            Write-Error "sqlcmd.exe not found"
            exit 1
          }
          Write-Output "All required tools found."

      - name: Build SSIS Project
        shell: powershell
        run: |
          $projectFile = "$env:GITHUB_WORKSPACE\HandsOnProject\Timesheet\MigratingTimesheet\MigratingTimesheet.dtproj"
          $outputDir = "$env:RUNNER_TEMP\SSISOutput"
          $config = "Development"

          if (-not (Test-Path $outputDir)) {
            New-Item -ItemType Directory -Path $outputDir -Force | Out-Null
          }

          & "C:\ssis-tools\SSISBuild.exe" -p:"$projectFile" -o:"$outputDir" -c:"$config" -l:DIAG

          $ispacPath = Join-Path $outputDir "$config\MigratingTimesheet.ispac"
          if (-not (Test-Path $ispacPath)) {
            Write-Error "Build failed: .ispac not found at $ispacPath"
            exit 1
          }
          Write-Output "Build succeeded: $ispacPath"

      - name: Create SSIS Catalog Folder if missing
        shell: powershell
        run: |
          $sqlServer = "SAMBE202519"
          $catalogDB = "SSISDB"
          $folderName = "TimesheetDeploy"

          $exists = sqlcmd -S $sqlServer -d $catalogDB -Q "SELECT 1 FROM catalog.folders WHERE name = '$folderName'" -E -h -1
          if ([string]::IsNullOrEmpty($exists)) {
            sqlcmd -S $sqlServer -d $catalogDB -Q "EXEC catalog.create_folder @folder_name = '$folderName'" -E
            Write-Output "Folder '$folderName' created"
          } else {
            Write-Output "Folder '$folderName' already exists"
          }

      - name: Deploy SSIS Project to SSISDB
        shell: powershell
        run: |
          $ispacPath = "$env:RUNNER_TEMP\SSISOutput\Development\MigratingTimesheet.ispac"
          $sqlServer = "SAMBE202519"
          $catalogDB = "SSISDB"
          $folderName = "TimesheetDeploy"
          $projectName = "MigratingTimesheet"

          Add-Type -AssemblyName System.Data
          $projectBytes = [System.IO.File]::ReadAllBytes($ispacPath)

          $connString = "Data Source=$sqlServer;Initial Catalog=$catalogDB;Integrated Security=SSPI;"
          $conn = New-Object System.Data.SqlClient.SqlConnection $connString
          $conn.Open()

          $cmd = $conn.CreateCommand()
          $cmd.CommandText = "[catalog].[deploy_project]"
          $cmd.CommandType = [System.Data.CommandType]::StoredProcedure

          $cmd.Parameters.Add("@folder_name", [System.Data.SqlDbType]::NVarChar, 128).Value = $folderName
          $cmd.Parameters.Add("@project_name", [System.Data.SqlDbType]::NVarChar, 128).Value = $projectName
          $cmd.Parameters.Add("@project_stream", [System.Data.SqlDbType]::VarBinary, -1).Value = $projectBytes

          try {
            Write-Output "Deploying .ispac to SSISDB..."
            $cmd.ExecuteNonQuery() | Out-Null
            Write-Output "Deployment successful."
          } catch {
            Write-Error "Deployment failed: $_"
            exit 1
          } finally {
            $conn.Close()
          }
