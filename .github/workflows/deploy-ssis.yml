name: Deploy SSIS Package to SSISDB

on:
  workflow_dispatch:

jobs:
  deploy-ssis:
    runs-on: self-hosted
    timeout-minutes: 20

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Validate SSIS Project File
        shell: powershell
        run: |
          $projectPath = "${{ github.workspace }}\HandsOnProject\Timesheets\Integration Services Project1.dtproj"
          if (-not (Test-Path $projectPath)) {
            Write-Error "SSIS project file not found at: $projectPath"
            exit 1
          }
          Write-Output "Found SSIS project: $projectPath"

      - name: Build SSIS Project
        shell: cmd
        run: |
          msbuild "HandsOnProject\Timesheets\Integration Services Project1.dtproj" /p:Configuration=Development

      - name: Verify .ispac File
        shell: powershell
        run: |
          $ispacPath = "${{ github.workspace }}\HandsOnProject\Timesheets\bin\Development\Integration Services Project1.ispac"
          if (-not (Test-Path $ispacPath)) {
            Write-Error "ISPAC file not found after build at $ispacPath"
            exit 1
          }
          Write-Output "ISPAC file ready: $ispacPath"

      - name: Deploy ISPAC to SSISDB
        shell: powershell
        run: |
          $ispacPath = "${{ github.workspace }}\HandsOnProject\Timesheets\bin\Development\Integration Services Project1.ispac"
          $sqlServer = "SAMBE202519"
          $folderName = "TimesheetMigration"
          $projectName = "Integration Services Project1"

          Add-Type -AssemblyName System.Data
          $projectBytes = [System.IO.File]::ReadAllBytes($ispacPath)

          $conn = New-Object System.Data.SqlClient.SqlConnection "Data Source=$sqlServer;Initial Catalog=SSISDB;Integrated Security=SSPI;"
          $conn.Open()

          $cmd = $conn.CreateCommand()
          $cmd.CommandText = "[catalog].[deploy_project]"
          $cmd.CommandType = [System.Data.CommandType]::StoredProcedure

          $cmd.Parameters.Add("@folder_name", [System.Data.SqlDbType]::NVarChar, 128).Value = $folderName
          $cmd.Parameters.Add("@project_name", [System.Data.SqlDbType]::NVarChar, 128).Value = $projectName
          $cmd.Parameters.Add("@project_stream", [System.Data.SqlDbType]::VarBinary, -1).Value = $projectBytes

          try {
            $cmd.ExecuteNonQuery() | Out-Null
            Write-Output "✅ Deployment succeeded."
          } catch {
            Write-Error "❌ Deployment failed: $_"
            exit 1
          } finally {
            $conn.Close()
          }
