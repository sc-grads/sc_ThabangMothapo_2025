name: Deploy Timesheet Database

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest # Change to self-hosted if using a local runner

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Microsoft SQL Server Tools
        run: |
          sudo apt-get update
          sudo apt-get install -y curl apt-transport-https gnupg
          curl -fsSL https://packages.microsoft.com/keys/microsoft.asc | sudo gpg --batch --yes --dearmor -o /usr/share/keyrings/microsoft-prod.gpg
          curl -fsSL https://packages.microsoft.com/config/ubuntu/24.04/prod.list | sudo tee /etc/apt/sources.list.d/mssql-release.list
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y mssql-tools18 unixodbc-dev
          echo 'export PATH="$PATH:/opt/mssql-tools18/bin"' >> ~/.bashrc
          source ~/.bashrc

      - name: Debug Environment Variables
        env:
          SQL_SERVER: ${{ secrets.SQL_SERVER }}
          SQL_USERNAME: ${{ secrets.SQL_USERNAME }}
          SQL_DATABASE: ${{ secrets.SQL_DATABASE }}
        run: |
          echo "SQL_SERVER is set: ${SQL_SERVER:+set}"
          echo "SQL_USERNAME is set: ${SQL_USERNAME:+set}"
          echo "SQL_DATABASE is set: ${SQL_DATABASE:+set}"
          echo "SQL_SERVER length: ${#SQL_SERVER}"
          echo "SQL_USERNAME length: ${#SQL_USERNAME}"
          echo "SQL_DATABASE length: ${#SQL_DATABASE}"
          # Test network reachability
          if [ -n "$SQL_SERVER" ]; then
            host=$(echo "$SQL_SERVER" | cut -d'\' -f1)
            ping -c 4 "$host" || echo "Ping to $host failed."
            nc -zv "$host" 1433 || echo "Port 1433 unreachable on $host."
            nc -zv -u "$host" 1434 || echo "Port 1434 (UDP) unreachable on $host."
          fi

      - name: Test SQL Server Connection
        env:
          SQL_SERVER: ${{ secrets.SQL_SERVER }}
          SQL_USERNAME: ${{ secrets.SQL_USERNAME }}
          SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}
          SQL_DATABASE: ${{ secrets.SQL_DATABASE }}
        run: |
          /opt/mssql-tools18/bin/sqlcmd -S "$SQL_SERVER" -U "$SQL_USERNAME" -P "$SQL_PASSWORD" -d "$SQL_DATABASE" -N -C -t 60 -r1 -Q "SELECT @@VERSION;" || {
            echo "Connection test failed. Check SQL Server secrets and network configuration.";
            exit 1;
          }

      - name: Deploy Timesheet Database
        env:
          SQL_SERVER: ${{ secrets.SQL_SERVER }}
          SQL_USERNAME: ${{ secrets.SQL_USERNAME }}
          SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}
          SQL_DATABASE: ${{ secrets.SQL_DATABASE }}
        run: |
          /opt/mssql-tools18/bin/sqlcmd -S "$SQL_SERVER" -U "$SQL_USERNAME" -P "$SQL_PASSWORD" -d "$SQL_DATABASE" -N -C -t 60 -r1 -i deploy_timesheet.sql || {
            echo "Deployment failed. Check error output above.";
            exit 1;
          }
